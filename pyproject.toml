[project]
name = "majsoulrpa"
version = "0.1.0"
description = "A Robotic Process Automation (RPA) framework for Mahjong Soul (雀魂)"
authors = [
    { name = "Apricot S." },
]
license = { text = "MIT License" }
readme = "README.md"
requires-python = ">= 3.12"
keywords = ["mahjong", "Mahjong Soul", "Majsoul", "automation", "RPA"]
classifiers = [
    "Private :: Do Not Upload",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "imapclient>=3.0.1,<4",
    "mitmproxy>=11.0.0,<12",
    "opencv-python>=4.10.0.84,<5",
    "playwright>=1.48.0,<2",
    "protobuf>=5.28.2,<6",
    "jsonschema>=4.23.0,<5",
    "boto3>=1.35.52,<2",
    "pyzmq>=26.2.0,<27",
    "referencing>=0.35.1,<0.36",
    "numpy>=2.1.2,<3",
    "wsproto>=1.2.0,<2",
]

[project.scripts]
majsoulrpa_remote_browser = "majsoulrpa.remote_browser._remote_browser:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "typing" },
]
lint = [
    "ruff>=0.7.1,<0.8",
]
test = [
    "pytest>=8.3.3,<9",
]
typing = [
    "mypy>=1.13.0,<2",
    "types-protobuf>=5.28.0.20240924,<6",
    "types-jsonschema>=4.23.0.20240813,<5",
    "boto3-stubs[s3]>=1.35.51,<2",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/majsoulrpa"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
src = ["src"]
extend-exclude = ["src/majsoulrpa/_majsoul_internal/protocol"]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D", # pydocstyle

    "C901",    # complex-structure
    "ANN002",  # missing-type-args
    "ANN003",  # missing-type-kwargs
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "TD002",   # missing-todo-author
    "TD003",   # missing-todo-link
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 72
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.extend-per-file-ignores]
"./examples/*" = [
    "S101",   # assert
    "INP001", # implicit-namespace-package
    "T201",   # print
    "TRY004", # type-check-without-type-error
]
"./tests/*" = [
    "S101",   # assert
    "SLF001", # private-member-access
]

[tool.mypy]
exclude = [
    'liqi_pb2\.py$',
    'liqi_pb2\.pyi$',
]
