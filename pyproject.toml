[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
version = "0.0.1"
name = "majsoulrpa"
description = "A Robotic Process Automation (RPA) framework for Mahjong Soul (雀魂)"
license = "MIT"
authors = ["Apricot-S"]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
]
readme = "README.md"
keywords = ["mahjong", "Mahjong Soul", "Majsoul", "automation", "RPA"]
packages = [{ include = "majsoulrpa", from = "src" }]
include = [
    "src/majsoulrpa",
    "src/majsoulrpa/template/**/*",
    "src/majsoulrpa/py.typed",
]

[tool.poetry.dependencies]
python = "^3.11"
imapclient = "^3.0.1"
mitmproxy = "^10.1.6"
opencv-python = "^4.9.0.80"
playwright = "^1.40.0"
protobuf = "^4.25.1"
jsonschema = "^4.20.0"
boto3 = "^1.34.11"
pyzmq = "^26.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = "^0.3.0"
types-protobuf = "^4.24.0.4"
types-jsonschema = "^4.20.0.0"
boto3-stubs = { extras = ["s3"], version = "^1.34.11" }
pytest = "^8.0.1"

[tool.poetry.scripts]
majsoulrpa_remote_browser = "majsoulrpa.remote_browser._remote_browser:main"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
src = ["src"]
extend-exclude = ["src/majsoulrpa/_impl/protobuf_liqi"]
line-length = 79

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D", # pydocstyle

    # "C901",    # complex-structure
    "ANN002",  # missing-type-args
    "ANN003",  # missing-type-kwargs
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "TD002",   # missing-todo-author
    "TD003",   # missing-todo-link
    "PLR0911", # too-many-return-statements
    "PLR0912", # too-many-branches
    "PLR0913", # too-many-arguments
    "PLR0915", # too-many-statements
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 72
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.extend-per-file-ignores]
"./examples/*" = ["S101", "INP001", "T201", "TRY004"]
"./tests/*" = ["S101", "SLF001"]
